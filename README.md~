#SimpleShapeFinder
=============

## COMP251

### Winter 2013

#### Homework 1


#### Question 2

Clearly (and succinctly) describe your algorithm, using words and/or high-level pseudo-code. Assume that Bresenham’s algorithm takes time *2πr* for a given *r*. For an *n × n* image input and an arbitrary but constant single radius input (ie *r = maxr = minr*):

	Blabla

(a) (**10**) Analyze the worst-case time complexity of your approach in terms of *n*. You must provide a clear description of how you derive the complexity. Provide proof of an appropriate complexity class.


(b) (**5**) Analyze the best-case time complexity of your approach in terms of *n*. You must provide a clear description of how you derive the complexity. Provide proof of an appropriate complexity class.


(c) (**5**) Suppose that *r* is not a constant, but rather a function of *n*. Is there an *r* that maximizes the worst-case time complexity for a given *n*? Justify your answer. 


#### Question 3

(a) (**10**) Experimentally measure the performance of your algorithm in relation to *n*. Use image 3 as input, and vary the last (two) command-line parameter(s) as a proxy for a range of image inputs of increas- ing size. Keep radius constant at 25. Be sure to measure only time to detect the circles, not the time to emit output. Discuss and explain the behaviour—does it match your calculated time complexity?


(b) (**5**) Now, experimentally measure performance in terms of radius. Use image 3 again, analyzing the entire image, but varying radius from 4 up to 200. Again, plot performance and discuss the results. 


#### Question 4

The algorithm given is quite fragile, and does not always find things which look circular to humans. 
Come up with a more robust way of tracing out the circles that detects as many of what a human observer might consider circles in images 1 and 3 (small) as possible. Concisely describe your algorithm changes. 

	BlaBlaBla
